# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL.

1. List the top 10 artist and songs based on popularity?

SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata

ORDER BY popularity ASC 
LIMIT 10

2. Which artist has the highest/lowest energy?

SELECT artist_name, energy
FROM BIT_DB.Spotifydata

ORDER BY energy DESC
LIMIT 1

SELECT artist_name, energy
FROM BIT_DB.Spotifydata

ORDER BY energy ASC
LIMIT 1

3. Select all the artists whose name starts with O and list their songs?

SELECT artist_name, track_name
FROM BIT_DB.Spotifydata

WHERE artist_name
LIKE 'O_%'

GROUP BY artist_name, track_name


4. Select all the artists who has a popularity greater than 50 and energy lesser than 0.7 and what are their track id numbers?

SELECT artist_name, track_id
FROM BIT_DB.Spotifydata

WHERE popularity> '50'
AND energy< '0.7'

5. What is the average energy by artist and track?

SELECT AVG(energy), artist_name, track_name
FROM BIT_DB.Spotifydata

GROUP BY artist_name, track_name

6. Select the artist who has the lowest popularity rate?

SELECT artist_name, popularity
FROM BIT_DB.Spotifydata

ORDER BY popularity ASC
LIMIT 1

7. List all the artits whose name ends with E and list their songs?

SELECT artist_name, track_name
FROM BIT_DB.Spotifydata

WHERE artist_name
LIKE '%E'

GROUP BY artist_name, track_name

8. What is the minimum tempo of all 50 songs?

SELECT tempo, track_name
FROM BIT_DB.Spotifydata

ORDER BY tempo ASC
LIMIT 1

9.  Which artist has the longest duration song, and the shortest duration song?

SELECT artist_name, duration_ms
FROM BIT_DB.Spotifydata

ORDER BY duration_ms DESC
LIMIT 1

SELECT artist_name, duration_ms
FROM BIT_DB.Spotifydata

ORDER BY duration_ms ASC
LIMIT 1

10. Which track names has energy greater than 0.8 or danceability greater than 0.5?

SELECT track_name
FROM BIT_DB.Spotifydata

WHERE energy> '0.8'
OR danceability> '0.5'

11. What is the total duration time of the top 5 songs?

SELECT SUM(duration_ms), track_name
FROM BIT_DB.Spotifydata

GROUP BY track_name
LIMIT 5

